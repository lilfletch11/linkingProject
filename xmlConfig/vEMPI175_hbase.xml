<duke>
<!--To run this job:  java -classpath ".;c:\duke-1.2\*" RunDukeTestAA vEMPI240.xml -->
<!--TO recompile wrapper:  javac -cp c:\duke-1.2\* RunDukeTestAA.java -->
<!-- -->
<!-- -->
  <schema>
    <threshold>0.99</threshold>
    <maybe-threshold>0.5</maybe-threshold>
    <path>test</path>

	<!-- Match on patID if enabled for this datasource or datasource group.  Obviously need to verify that patID enabled before running this rule.
			Prefer to have the master set filtered by DSID instead of using a comparator. -->
    <property>
      <name>Identifier</name>
	  <comparator>no.priv.garshol.duke.comparators.ExactComparator</comparator>
      <low>0.0</low>
      <high>1</high>
    </property> 
    <property>
      <name>patientID</name> 
      <comparator>no.priv.garshol.duke.comparators.ExactComparator</comparator>
      <low>0.0</low>
      <high>1</high>
    </property>   
  </schema>  

<object class="com.valencehealth.vmm.PatientDemoGraphicKeyFunction" name="PatientDemoGraphicKeyFunction"/>
    <!--param property="Identifier" order="1" substring="(1,3)" />
    <param property="patientID" order="2" />
</object-->


<database class="no.priv.garshol.duke.databases.InMemoryBlockingDatabase">    
   <param name="window-size" value="1"/> 
   <param name="key-functions" value="PatientDemoGraphicKeyFunction"/>
</database> 

  <!-- ORDER OF THESE GROUPS MATTERS!!! It returns links for topGroup RIGHT JOIN bottomGroup - i.e. no record is returned for a topGroup record that doesnt match a bottomGroup record.
		However, bottomGroup records that don't join to a topGroup record are returned as "non-match" 
		
	    <param name="driver-class" value="org.apache.hadoop.hbase.jdbc.Driver"/>
	    <param name="connection-string" value="jdbc:hbql;maxtablerefs=10;hbase.master=192.168.2.208:60000"/>
		--> 		
		
 		
  <group>
	  <jdbc>
	    <param name="driver-class" value="org.apache.phoenix.jdbc.PhoenixDriver"/>
	    <param name="connection-string" value="jdbc:phoenix:192.168.2.208:5181"/>
		<param name="user-name" value="bfletcher"/>
		<param name="password" value="Baseball114"/>
		<param name="query" value="scan 'xyz'"/> 
	    <column name="id"
				property="id"/>
		<column name="givenName"
				property="givenName"/>
		<column name="familyName"
				property="familyName"/> 
		<column name="address1"
				property="address1"/>
		<column name="address2"
				property="address2"/>
		<column name="city"
				property="city"/>				
		<column name="postalCode"
				cleaner="no.priv.garshol.duke.cleaners.DigitsOnlyCleaner"
				property="postalCode"/>
		<column name="state"
				property="state"/>		
		<column name="dateOfBirth"
				property="dateOfBirth"/>
		<column name="phone"
				cleaner="no.priv.garshol.duke.cleaners.PhoneNumberCleaner"
				property="phone"/>
		<column name="SSN"
				cleaner="no.priv.garshol.duke.cleaners.DigitsOnlyCleaner"
				property="SSN"/> 
		<column name="Gender"
				property="sex"/>
	  </jdbc>
  </group>
  <group>
	  <csv>
		<param name="input-file" value="e:\data\openempi_test_patients11b_5k.csv" />
		<param name="header-line" value="false" />
		
	    <column name="1"
				property="id"/>
		<column name="2"
				property="givenName"/>
		<column name="3"
				property="familyName"/>
		<column name="4"
				property="address2"/>
		<column name="5"
				property="address1"/>
		<column name="6"
				property="city"/>
		<column name="7"
				cleaner="no.priv.garshol.duke.cleaners.DigitsOnlyCleaner"
				property="postalCode"/>
		<column name="8"
				property="state"/>
		<column name="9"
				property="dateOfBirth"/>
		<column name="10"
				cleaner="no.priv.garshol.duke.cleaners.PhoneNumberCleaner"
				property="phone"/>
		<column name="11"
				cleaner="no.priv.garshol.duke.cleaners.DigitsOnlyCleaner"
				property="SSN"/> 
		<column name="12"
				property="middleName"/>
		<column name="13"
				property="sex"/>
	  </csv>
  </group>
</duke>